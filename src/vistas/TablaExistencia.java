/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vistas;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import manejoProductos.categoria.Categoria;
import manejoProductos.existencia.Existencia;
import manejoProductos.existencia.IServicioExistencia;
import manejoProductos.existencia.ServicioExistenciaFabrica;
import manejoProductos.producto.IProductoServicio;
import manejoProductos.producto.Producto;
import manejoProductos.producto.ProductoServicioFabrica;
import manejoProductos.validador.Validador;

/**
 *
 * @author Brayan
 */
public class TablaExistencia extends javax.swing.JPanel {

    DefaultTableModel modelo;
    /**
     * Creates new form Tabla
     */
    public TablaExistencia() {
        initComponents();
        modelo = new DefaultTableModel();
        modelo.addColumn("Almacen");
        modelo.addColumn("tipo Almacen");
        modelo.addColumn("Codigo Producto");
        modelo.addColumn("nombre Producto");
        modelo.addColumn("Descripcion Producto");
        modelo.addColumn("Categoria");
        modelo.addColumn("PCompra");
        modelo.addColumn("PVenta");
        modelo.addColumn("modoGuardado");
        modelo.addColumn("ubicacion dentro el almacen");
        modelo.addColumn("cantidad");
        this.jTable1.setModel(modelo);
        
        llenarTablaExistencia();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtBuscar = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabla.setBackground(new java.awt.Color(255, 255, 255));
        tabla.setPreferredSize(new java.awt.Dimension(1200, 800));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        txtBuscar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout tablaLayout = new javax.swing.GroupLayout(tabla);
        tabla.setLayout(tablaLayout);
        tablaLayout.setHorizontalGroup(
            tablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablaLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 17, Short.MAX_VALUE))
            .addGroup(tablaLayout.createSequentialGroup()
                .addGap(467, 467, 467)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tablaLayout.setVerticalGroup(
            tablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablaLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        add(tabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1210, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        limpiarTabla();
        IServicioExistencia ptt = ServicioExistenciaFabrica.construir();
        var productos = ptt.buscarExistencia(txtBuscar.getText().toString().trim());
        
        if(Validador.getUsuario().getAlmacen().gettAlmacen().equals("Principal")){
            llenarTablaExistenciaPrincipal(productos);
        }else{
            llenarTablaSecundario(productos);
        }
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
        
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void llenarTablaExistenciaPrincipal(ArrayList<Existencia> productos){
        limpiarTabla();
        
        Object[] datos = new Object[modelo.getColumnCount()];
        
        for (Existencia item : productos) {
            
            datos[0] = item.getAlmacen().getNombre();
            datos[1] = item.getAlmacen().gettAlmacen();
            datos[2] = item.getProducto().getCodProducto();
            datos[3] = item.getProducto().getNombre();
            datos[4] = item.getProducto().getDescripcion();
            datos[5] = item.getProducto().getCategoria().getNombre();
            datos[6] = item.getProducto().getpCompra();
            datos[7] = item.getProducto().getpVenta();
            datos[8] = item.getProducto().gettGuardado();
            datos[9] = item.getUbicacion();
            datos[10] = item.getCantidad();
            
            modelo.addRow(datos);
            
        }
        this.jTable1.setModel(modelo);
    }
    private void llenarTablaSecundario(ArrayList<Existencia> productos){
        limpiarTabla();
        
        Object[] datos = new Object[modelo.getColumnCount()];
        
        for (Existencia item : productos) {
            System.out.println(Validador.getUsuario().getAlmacen().getIdAlmacen() +"este es el item " + item.getAlmacen().getIdAlmacen());
            if(Validador.getUsuario().getAlmacen().getIdAlmacen()==item.getAlmacen().getIdAlmacen()){
            datos[0] = item.getAlmacen().getNombre();
            datos[1] = item.getAlmacen().gettAlmacen();
            datos[2] = item.getProducto().getCodProducto();
            datos[3] = item.getProducto().getNombre();
            datos[4] = item.getProducto().getDescripcion();
            datos[5] = item.getProducto().getCategoria().getNombre();
            datos[6] = item.getProducto().getpCompra();
            datos[7] = item.getProducto().getpVenta();
            datos[8] = item.getProducto().gettGuardado();
            datos[9] = item.getUbicacion();
            datos[10] = item.getCantidad();
            
            modelo.addRow(datos);
            }
        }
        this.jTable1.setModel(modelo);
    }
    
    public void llenarTablaExistencia(){
        IServicioExistencia ptt = ServicioExistenciaFabrica.construir();
        var productos = ptt.obteerExistencia();
        
        if(Validador.getUsuario().getAlmacen().gettAlmacen().equals("Principal")){
            llenarTablaExistenciaPrincipal(productos);
        }else{
            llenarTablaSecundario(productos);
        }
    }
    
    private void limpiarTabla() {
        for (int i = 0; i < this.jTable1.getRowCount(); i++) {
            modelo.removeRow(i);
            i -= 1;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    protected javax.swing.JTable jTable1;
    private javax.swing.JPanel tabla;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
}
